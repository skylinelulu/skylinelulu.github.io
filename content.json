{"meta":{"title":"SkylineLulu","subtitle":null,"description":"在头顶上，有几千亿的光年。","author":"SkylineLulu","url":"https://skylinelulu.github.io"},"pages":[{"title":"categories","date":"2018-05-12T13:22:49.000Z","updated":"2018-05-12T13:22:49.584Z","comments":true,"path":"categories/index.html","permalink":"https://skylinelulu.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-05-12T13:20:42.000Z","updated":"2018-05-12T13:20:42.908Z","comments":true,"path":"tags/index.html","permalink":"https://skylinelulu.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"xposed中函数参数byte[]类型数据读取","slug":"xposed-byte[]","date":"2018-06-03T03:07:02.000Z","updated":"2018-06-03T03:11:00.513Z","comments":true,"path":"2018/06/03/xposed-byte[]/","link":"","permalink":"https://skylinelulu.github.io/2018/06/03/xposed-byte[]/","excerpt":"","text":"之前hook native函数是使用ADBI框架的，但是其平台有限，Android5效果稳定，Android6成功率不高，到Android7就无法使用了。因此想使用xposed框架（已支持Android8）。由于xposed也可以Hook native函数，可获取native函数的参数数据，因此想将hook的函数从ADBI框架移植到xposed模块中。但是遇到了一个问题：之前使用ADBI框架获取byte[]类型的参数数据是正常的，但是在xposed中只能获取到地址，一直提示参数为object类型。那么如何在xosed中获得真实数据呢？解决方案参考如下。 如下为ADBI框架中重写的函数，获取byte类型参数a的数据，并写入/sdcard/data.txt中。 123456789101112131415161718192021222324void new_hookData(JNIEnv* env, jobject thiz, jbyte *a) &#123; jbyte *arrayBody = (*env)-&gt;GetByteArrayElements(env,a,NULL); jsize len = (*env)-&gt;GetArrayLength(env,a); byte *dDate = (byte *)arrayBody; int fd = open(\"/sdcard/data.txt\", O_APPEND|O_RDWR|O_CREAT,S_IRWXU); if(fd &lt; 0) &#123; LOGI(\"[+] open failed\"); LOGW(\"[+] error (errno=%d)\", errno); &#125; else &#123; LOGI(\"[+] success open\"); &#125; int write_len = write(fd, dDate, len); (*env)-&gt;ReleaseByteArrayElements(env,a,arrayBody,NULL); close(fd); old_hookData(env, thiz, a);&#125; 如下是xposed中的hook代码： 1234567891011121314151617181920212223findAndHookMethod(\"className\",lp.classLoader,\"methodName\",byte[].class, new hookData());class hookData extends XC_MethodHook&#123; protected void beforeHookedMethod(MethodHookParam param) throws Throwable &#123; byte[] buf = (byte[])param.args[0]; FileHelper filehelper = new FileHelper(); try &#123; //将byte数组写入文件 createFile(\"/sdcard/data.txt\", buf); &#125; catch (IOException e) &#123; // TODO Auto-generated catch block e.printStackTrace(); &#125; &#125; //将byte数组写入文件 public void createFile(String path, byte[] content) throws IOException &#123; FileOutputStream fos = new FileOutputStream(path); fos.write(content); fos.close(); &#125;&#125; over!","categories":[{"name":"Android","slug":"Android","permalink":"https://skylinelulu.github.io/categories/Android/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://skylinelulu.github.io/tags/Android/"},{"name":"xposed","slug":"xposed","permalink":"https://skylinelulu.github.io/tags/xposed/"}]},{"title":"三星s7 edge(G9350)刷机经验","slug":"SUMSUNG-ROOT","date":"2018-05-12T13:09:32.000Z","updated":"2018-06-03T03:11:50.959Z","comments":true,"path":"2018/05/12/SUMSUNG-ROOT/","link":"","permalink":"https://skylinelulu.github.io/2018/05/12/SUMSUNG-ROOT/","excerpt":"","text":"设备：Sumsung S7 Edge刷入系统: Android 7刷机方式：线刷需要安装包： https://github.com/skylinelulu/SUMSUNG-S7-ROOT 步骤：1.刷系统。电脑端打开odin刷机软件。手机关机情况下，同时按住“音量键下”+“HOME键”+“开机键”进入开机模式，按照提示按下音量上键。按照顺序刷入五件套，即S7android7.0文件夹中的文件。具体教程2.解锁。进入系统，运行“三星解锁.apk”，进行解锁。3.ROOT（参考：7.0ROOT步骤.txt）。再次关机，同时按住“音量键下”+“HOME键”+“开机键”进入开机模式，打开odin，AP刷入recovery，即G9350_7.0_QC1_twrp_kernel_su2.79.tar文件。在odin的options中去掉Auto Reboot的对勾。start。手机进入twrp模式，清除，格式化data分区，输入yes，重启手机。备注：查看设置-关于手机-软件信息-版本号，我的手机的版本号后三位为QC1，因此采用该recovery文件。 开机，adb shell, su，就可以看到设备已经ROOT，data也解密了。","categories":[{"name":"Android","slug":"Android","permalink":"https://skylinelulu.github.io/categories/Android/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://skylinelulu.github.io/tags/Android/"},{"name":"Sumsung Root","slug":"Sumsung-Root","permalink":"https://skylinelulu.github.io/tags/Sumsung-Root/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-05-12T12:14:09.851Z","updated":"2018-05-12T12:14:09.853Z","comments":true,"path":"2018/05/12/hello-world/","link":"","permalink":"https://skylinelulu.github.io/2018/05/12/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}